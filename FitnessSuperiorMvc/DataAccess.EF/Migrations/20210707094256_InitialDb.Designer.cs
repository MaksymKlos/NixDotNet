// <auto-generated />
using System;
using DataAccess.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.EF.Migrations
{
    [DbContext(typeof(FitnessAppContext))]
    [Migration("20210707094256_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Dto.FitnessProgram.ExerciseDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MuscleGroups")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SetOfExercisesDtoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SetOfExercisesDtoId");

                    b.ToTable("ExerciseDto");
                });

            modelBuilder.Entity("Models.Dto.FitnessProgram.FoodDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BeneficialFeatures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Calories")
                        .HasColumnType("float");

                    b.Property<int?>("MealPlanDtoId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MealPlanDtoId");

                    b.ToTable("FoodDto");
                });

            modelBuilder.Entity("Models.Dto.FitnessProgram.MealPlanDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Calories")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NutritionProgramDtoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NutritionProgramDtoId");

                    b.ToTable("MealPlanDto");
                });

            modelBuilder.Entity("Models.Dto.FitnessProgram.NutritionProgramDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TypeOfDiet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NutritionPrograms");
                });

            modelBuilder.Entity("Models.Dto.FitnessProgram.SetOfExercisesDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MuscleGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrainingProgramDtoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainingProgramDtoId");

                    b.ToTable("SetOfExercisesDto");
                });

            modelBuilder.Entity("Models.Dto.FitnessProgram.TrainingProgramDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AgeRestriction")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RequiredSkillLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrainerId")
                        .HasColumnType("int");

                    b.Property<string>("TypeOfProgram")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TrainerId");

                    b.ToTable("TrainingPrograms");
                });

            modelBuilder.Entity("Models.Dto.Person.NutritionistDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("AgeSpecialization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Education")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Options")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Nutritionists");
                });

            modelBuilder.Entity("Models.Dto.Person.TrainerDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Education")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkExperience")
                        .HasColumnType("int");

                    b.Property<string>("WorkWithGender")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Trainers");
                });

            modelBuilder.Entity("Models.Dto.FitnessProgram.ExerciseDto", b =>
                {
                    b.HasOne("Models.Dto.FitnessProgram.SetOfExercisesDto", null)
                        .WithMany("Exercises")
                        .HasForeignKey("SetOfExercisesDtoId");
                });

            modelBuilder.Entity("Models.Dto.FitnessProgram.FoodDto", b =>
                {
                    b.HasOne("Models.Dto.FitnessProgram.MealPlanDto", null)
                        .WithMany("Food")
                        .HasForeignKey("MealPlanDtoId");
                });

            modelBuilder.Entity("Models.Dto.FitnessProgram.MealPlanDto", b =>
                {
                    b.HasOne("Models.Dto.FitnessProgram.NutritionProgramDto", null)
                        .WithMany("MealPlans")
                        .HasForeignKey("NutritionProgramDtoId");
                });

            modelBuilder.Entity("Models.Dto.FitnessProgram.SetOfExercisesDto", b =>
                {
                    b.HasOne("Models.Dto.FitnessProgram.TrainingProgramDto", null)
                        .WithMany("SetsOfExercises")
                        .HasForeignKey("TrainingProgramDtoId");
                });

            modelBuilder.Entity("Models.Dto.FitnessProgram.TrainingProgramDto", b =>
                {
                    b.HasOne("Models.Dto.Person.TrainerDto", "Trainer")
                        .WithMany()
                        .HasForeignKey("TrainerId");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Models.Dto.FitnessProgram.MealPlanDto", b =>
                {
                    b.Navigation("Food");
                });

            modelBuilder.Entity("Models.Dto.FitnessProgram.NutritionProgramDto", b =>
                {
                    b.Navigation("MealPlans");
                });

            modelBuilder.Entity("Models.Dto.FitnessProgram.SetOfExercisesDto", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("Models.Dto.FitnessProgram.TrainingProgramDto", b =>
                {
                    b.Navigation("SetsOfExercises");
                });
#pragma warning restore 612, 618
        }
    }
}
