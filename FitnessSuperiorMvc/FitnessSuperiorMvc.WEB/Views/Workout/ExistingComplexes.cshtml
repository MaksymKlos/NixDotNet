@{
    ViewData["Title"] = "Existing complexes";
}
@model FitnessSuperiorMvc.WEB.ViewModels.Page.PaginationViewModel<FitnessSuperiorMvc.DA.Entities.Sport.SetOfExercises>
<div class="main__content">
    <h1 class="main__title center">
        Sets of exercises
    </h1>
    <hr>
    @foreach (var complex in Model.PaginatedPrograms)
    {
        <section class="main__content-section">
            <h2 class="main__title center">
                <a class="main__title-link" asp-route-id="@complex.Id" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")" asp-controller="Workout" asp-action="ComplexView">@complex.Name</a>
            </h2>
            <p class="main__text center">
                Active muscle groups: @complex.MuscleGroups
            </p>
            <div class="model-links">
                <a class="model-link" asp-route-id="@complex.Id" asp-action="AddComplexToProgram" asp-controller="List">+</a>
            </div>
        </section>
    }
    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-end">
            <li class="@(Model.CurrentPage == 1 ? "page-item disabled" : "page-item")">
                <a class="page-link" href="@Url.Action("ExistingComplexes", new {page = Model.PreviousPage})">Previous</a>
            </li>
            @for (int i = 1; i <= Model.PageCount(); i++)
            {


                <li class="@(i == Model.CurrentPage ? "page-item active" : "page-item")">
                    <a class="page-link" href="@Url.Action("ExistingComplexes", new {page = i})">@i</a>
                </li>

            }
            <li class="@(Model.CurrentPage == Model.PageCount() ? "page-item disabled" : "page-item")">
                <a class="page-link" href="@Url.Action("ExistingComplexes", new {page = Model.NextPage})">Next</a>
            </li>
        </ul>

    </nav>
</div>
@section Styles
{
    <link href="~/css/model.css" type="text/css" rel="stylesheet" />
}